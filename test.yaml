---
- hosts: all
  name: Deploy from S3 artifact in docker container and run
  become: true
  become_method: sudo
  vars:
    git_key_path: /home/ubuntu/git-key
    git_key_name: jenkins-git_key
    git_key_source_path: /home/ec2-user/ansible-test
    app_repo_path: /home/ubuntu/petclinic
    git_repo_name: git@github.com:WladimirRogovenko/petclinic.git
    s3_buket_name: p-petclinic2023-jenkins-archive-artifacts
    s3_last_artifact_path: /home/ubuntu/app
    s3_last_artifact_save_name: app.jar
  tasks:
      # install boto3 on server for aws_s3
    - name: "install boto3 on server for aws_s3"
      command: python3 -m pip install boto3
    - name: Create Directory {{ git_key_path }} if not exists
      file: 
        path: "{{ git_key_path }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0755
    - name: Copy Git key to dev-srv
      copy:
        src: "{{ git_key_source_path }}/{{ git_key_name }}"
        dest: "{{ git_key_path }}/{{ git_key_name }}"
        owner: ubuntu
        group: ubuntu
        mode: 0644
#    - name: "Show Network Interfaces"
#      command: ip a
#      register: details
#    - name: 'Get Interfaces details'
#      debug:
#        msg: "{{ details.stdout }}"
#    - name: 'Get env AWS_ACCESS_KEY_ID'
#      debug:
#        msg="{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    - name: 'Get env AWS_SECRET_ACCESS_KEY'
#      debug:
#        msg="{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

# we must not create DIR, becouse GIT always create dir
#    - name: Create Dest Directory petclinic if not exists
#      file: 
#        path: /home/ubuntu/petclinic
#        state: directory
#        owner: ubuntu
#        group: ubuntu
#        mode: 0755
    - name: "Clone repo petclinic {{ git_repo_name }}"
      git:
        accept_hostkey: yes
        clone: yes
        version: dev
        dest: "{{ app_repo_path }}"
        key_file: "{{ git_key_path }}/{{ git_key_name }}"
        repo: "{{ git_repo_name }}"
    - name: "Get filenames in S3 last_build"
      aws_s3:
        bucket: "{{ s3_buket_name }}"
        mode: list
        prefix: "last_build"
        aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
      register: listresult
    - debug:
        msg={{ listresult.s3_keys[0] }}
    - name: Create Directory {{ s3_last_artifact_path }} if not exists
      file: 
        path: "{{ s3_last_artifact_path }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0755
    - name: "Get LAST artifact from S3 and save as app.jar"
      aws_s3:
        bucket: "{{ s3_buket_name }}"
        object: "{{ listresult.s3_keys[0] }}"
        dest: "{{ s3_last_artifact_path }}/{{ s3_last_artifact_save_name }}"
        mode: get
        aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
      register: getresult
    - debug:
        msg="{{ getresult.msg }}" 
      when: getresult.changed